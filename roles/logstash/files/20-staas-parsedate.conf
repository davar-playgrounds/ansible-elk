filter {
  if [opcSvc] == "StoraaS" and [parseFamily] != "log4j" and [parseFamily] != "hwconfig" and [parseFamily] != "hwmonitor"  {

    #begin base message
    if [message] =~ "^2[0-2][0-9][0-9].*" {
        # ISO 8601
        grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:sysTimeRaw} %{GREEDYDATA:messageBody}"}
          tag_on_failure => "_dateParseFailure"
        }
    }
    else {
      # Legacy syslog timestamp format
      grok {
        match => { "message" => "%{SYSLOGTIMESTAMP:sysTimeRaw} %{GREEDYDATA:messageBody}"}
        tag_on_failure => "_dateParseFailure"
      }
    } #end base message

    #begin "cleanly parsed" messages
    if "_dateParseFailure" not in [tags] {
      date {
        match => ["sysTimeRaw", "ISO8601", "yyyy-MM-dd HH:mm:ss.SSS", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
        timezone => "UTC"
        #  without this, the record is timestamped at processing time instead of event time.
        target => "@timestamp"    # replacing the @timestamp makes it easier when creating ES records
      }

      mutate { add_field => ["storaas-dated", "true"] }
    }
  }
}