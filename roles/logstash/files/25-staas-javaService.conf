filter{
   if [opcSvc] == "StoraaS" and [parseFamily] == "log4j" {
		json{
			source => message
		}
		date {
			match => ["timestamp", "UNIX_MS"]
			timezone => "UTC"
			#  without this, the record is timestamped at processing time instead of event time.
			target => "@timestamp"    # replacing the @timestamp makes it easier when creating ES records
			#remove old field to reduce duplication
			remove_field => ["timestamp"]
		}
		mutate{
			rename => ["tx-id", "sw.txnId"]
			rename => ["message", "msg"]
			rename => ["logger", "u.module"]
		}
		grok {
			match => { "msg" => "^(?:(?<telemetry.method>\S+)\((?<telemetry.argument>.*)\) (?:took (?<telemetry.duration>\d+) ms, status (?<telemetry.statuscode>\d+)|\| (?<exception>.*)))$" }
			add_tag => "telemetry"
			tag_on_failure => [] #Optional
		}
		if "telemetry" in [tags] {
			kv {
				value_split => "="
				field_split => "\n,\{\}"
				trimkey => " "
                                include_keys => [ "accept", "accept-encoding", "accept-language", "accept-ranges", "access-control-allow-credentials", "access-control-allow-methods", "access-control-allow-origin", "access-control-expose-headers", "access-control-max-age", "access-control-request-headers", "access-control-request-method", "cache-control", "columnno", "connection", "content-length", "content-type", "date", "dc", "delimiter", "destination", "dnt", "duration", "end_marker", "etag", "expect", "extract-archive", "filename", "format", "gettags", "getting_content_as", "host", "if-match", "if-modified-since", "if-none-match", "if-unmodified-since", "jobid", "last-modified", "limit", "marker", "maximum", "method", "multipart-manifest", "offset", "origin", "path", "postman-token", "prefer", "prefix", "range", "referer", "region", "server", "statuscode", "temp_url_expires", "temp_url_sig", "transfer-encoding", "type", "upgrade-insecure-requests", "user-agent", "x-amz-content-sha256", "x-amz-date", "x-archive-restore-expiration", "x-auth-user", "x-copy-from", "x-delete-after", "x-delete-at", "x-forwarded-for", "x-id-tenant-name", "x-last-modified-timestamp", "x-newest", "x-object-manifest", "x-object-meta-content-length", "x-object-meta-etag", "x-object-meta-iv-salt", "x-object-meta-key-id", "x-remove-container-read", "x-remove-container-write", "x-remove-server-side-encryption", "x-replication-engine-ver", "x-server-side-encryption", "x-static-large-object", "x-storage-class", "x-storage-pass", "x-storage-token", "x-storage-user", "x-timestamp", "x-trans-id", "x-transfer-rate", "x-web-mode" ]
                                exclude_keys => [ "authorization", "cookie", "x-auth-key", "x-auth-token" ]
				source => "msg"
				prefix => "telemetry."
				remove_field => ["telemetry.argument"]
			}
		}
	}
}